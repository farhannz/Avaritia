name: Mingw cmake
on:
  push:
    branches: [ "cpm_test" ]
  pull_request:
    branches: [ "cpm_test" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_DEFAULT_TRIPLET: x64-mingw-static
  VCPKG_TARGET_TRIPLET: x64-mingw-static
  VCPKG_DEFAULT_HOST_TRIPLET: x64-mingw-static

# defaults:
#       run:
#         shell: bash

jobs:
  msys2-mingw64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
      with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        # This is the default location of the directory containing vcpkg sources.
        # Change it to the right location if needed.
        # vcpkgDirectory: '${{ github.workspace }}/vcpkg'

        # If not using a submodule for vcpkg sources, this specifies which commit
        # id must be checkout from a Git repo. 
        # Note: it must not be set if using a Git submodule for vcpkg.
        vcpkgGitCommitId: 'f6a5d4e8eb7476b8d7fc12a56dff300c1c986131'

        # This is the glob expression used to locate the vcpkg.json. 
        # Change it to match a single manifest file you want to use.
        # Note: do not use `${{ github.context }}` to compose the value as it
        # contains backslashes that would be misinterpreted. Instead
        # compose a value relative to the root of the repository using
        # `**/path/from/root/of/repo/to/vcpkg.json` to match the desired `vcpkg.json`.
        vcpkgJsonGlob: '**/vcpkg.json'
        
    - name: Configure Library
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S ${{GITHUB_WORKSPACE}} -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake -G Ninja

    - name: Build Library
      # Build your program with the given configuration
      run: cmake --build build --config ${{env.BUILD_TYPE}}
      
    - name: Configure Standalone GUI Launcher
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S ${{GITHUB_WORKSPACE}}/standalone -B build/standalone -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake -G Ninja

    - name: Build Standalone GUI Launcher
      # Build your program with the given configuration
      run: cmake --build build/standalone --config ${{env.BUILD_TYPE}} 



